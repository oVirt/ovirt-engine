core.help.usage = @PROGRAM_NAME@ [options] action [options]
core.help.header = Password Tool.
core.help.footer = \
Available actions:\n\
\  enc-decode - encryption decode.\n\
\  enc-encode - encryption encode.\n\
\  pbe-check  - password based encryption check.\n\
\  pbe-encode - password based encryption encode.
core.arg.help.name = help
core.arg.help.help = Show help.
core.arg.help.valuetype = java.lang.Boolean
core.arg.help.value = true
core.arg.help.default = false
core.arg.version.name = version
core.arg.version.help = Show version.
core.arg.version.valuetype = java.lang.Boolean
core.arg.version.value = true
core.arg.version.default = false

enc-decode.help.usage = @PROGRAM_NAME@ enc-decode [options]
enc-decode.help.header = Encryption decode.
enc-decode.arg.help.name = help
enc-decode.arg.help.help = Show help.
enc-decode.arg.help.valuetype = java.lang.Boolean
enc-decode.arg.help.value = true
enc-decode.arg.help.default = false
enc-decode.arg.keystore.name = keystore
enc-decode.arg.keystore.type = required_argument
enc-decode.arg.keystore.mandatory = true
enc-decode.arg.keystore.metavar = FILE
enc-decode.arg.keystore.help = Keystore
enc-decode.arg.keystore-type.name = keystore-type
enc-decode.arg.keystore-type.type = required_argument
enc-decode.arg.keystore-type.default = JKS
enc-decode.arg.keystore-type.help = Keystore type, default: @CLI_PRM_DEFAULT@
enc-decode.arg.keystore-alias.name = keystore-alias
enc-decode.arg.keystore-alias.alias = required_argument
enc-decode.arg.keystore-alias.mandatory = true
enc-decode.arg.keystore-alias.help = Keystore alias
enc-decode.arg.keystore-password.name = keystore-password
enc-decode.arg.keystore-password.password = required_argument
enc-decode.arg.keystore-password.default = interactive:
enc-decode.arg.keystore-password.help = \
Password can be specified in one of the following format:\n\
\  interactive: - query password interactively [default].\n\
\  pass:STRING - provide a password as STRING.\n\
\  env:KEY - provide a password using environment KEY.\n\
\  file:FILE - provide a password as 1st line of FILE.
enc-decode.arg.key-password.name = key-password
enc-decode.arg.key-password.password = required_argument
enc-decode.arg.key-password.help = \
Password can be specified in one of the following format:\n\
\  interactive: - query password interactively [default].\n\
\  pass:STRING - provide a password as STRING.\n\
\  env:KEY - provide a password using environment KEY.\n\
\  file:FILE - provide a password as 1st line of FILE.

enc-encode.help.usage = @PROGRAM_NAME@ enc-encode [options]
enc-encode.help.header = Encryption encode.
enc-encode.arg.help.name = help
enc-encode.arg.help.help = Show help.
enc-encode.arg.help.valuetype = java.lang.Boolean
enc-encode.arg.help.value = true
enc-encode.arg.help.default = false
enc-encode.arg.algorithm.name = algorithm
enc-encode.arg.algorithm.type = required_argument
enc-encode.arg.algorithm.default = AES/OFB/PKCS5Padding
enc-encode.arg.algorithm.metavar = ALGORITHM
enc-encode.arg.algorithm.help = Cipher algorithm, default: @CLI_PRM_DEFAULT@
enc-encode.arg.key-size.name = key-size
enc-encode.arg.key-size.type = required_argument
enc-encode.arg.key-size.valuetype = java.lang.Integer
enc-encode.arg.key-size.default = 256
enc-encode.arg.key-size.metavar = NUMBER
enc-encode.arg.key-size.help = Cipher key size, default: @CLI_PRM_DEFAULT@
enc-encode.arg.block-size.name = block-size
enc-encode.arg.block-size.type = required_argument
enc-encode.arg.block-size.valuetype = java.lang.Integer
enc-encode.arg.block-size.default = 100
enc-encode.arg.block-size.metavar = NUMBER
enc-encode.arg.block-size.help = Block size, default: @CLI_PRM_DEFAULT@
enc-encode.arg.certificate.name = certificate
enc-encode.arg.certificate.type = required_argument
enc-encode.arg.certificate.mandatory = true
enc-encode.arg.certificate.metavar = FILE
enc-encode.arg.certificate.help = Certificate to encryp to

pbe-check.help.usage = @PROGRAM_NAME@ pbe-check [options]
pbe-check.help.header = Password based encryption check.
pbe-check.arg.help.name = help
pbe-check.arg.help.help = Show help.
pbe-check.arg.help.valuetype = java.lang.Boolean
pbe-check.arg.help.value = true
pbe-check.arg.help.default = false
pbe-check.arg.password.name = password
pbe-check.arg.password.type = required_argument
pbe-check.arg.password.default = interactive:
pbe-check.arg.password.metavar = PASSWORD
pbe-check.arg.password.matcher = (interactive:|pass:.*|env:.*|file:.*)
pbe-check.arg.password.help = \
Password can be specified in one of the following format:\n\
\  interactive: - query password interactively [default].\n\
\  pass:STRING - provide a password as STRING.\n\
\  env:KEY - provide a password using environment KEY.\n\
\  file:FILE - provide a password as 1st line of FILE.

pbe-encode.help.usage = @PROGRAM_NAME@ pbe-encode [options]
pbe-encode.help.header = Password based encryption encode.
pbe-encode.arg.help.name = help
pbe-encode.arg.help.help = Show help.
pbe-encode.arg.help.valuetype = java.lang.Boolean
pbe-encode.arg.help.value = true
pbe-encode.arg.help.default = false
pbe-encode.arg.password.name = password
pbe-encode.arg.password.type = required_argument
pbe-encode.arg.password.default = interactive:
pbe-encode.arg.password.metavar = PASSWORD
pbe-encode.arg.password.matcher = (interactive:|pass:.*|env:.*|file:.*)
pbe-encode.arg.password.help = \
Password can be specified in one of the following format:\n\
\  interactive: - query password interactively [default].\n\
\  pass:STRING - provide a password as STRING.\n\
\  env:KEY - provide a password using environment KEY.\n\
\  file:FILE - provide a password as 1st line of FILE.
pbe-encode.arg.algorithm.name = algorithm
pbe-encode.arg.algorithm.type = required_argument
pbe-encode.arg.algorithm.default = PBEWithHmacSHA512AndAES_256
pbe-encode.arg.algorithm.metavar = ALGORITHM
pbe-encode.arg.algorithm.help = PBE algorithm, default: @CLI_PRM_DEFAULT@
pbe-encode.arg.key-size.name = key-size
pbe-encode.arg.key-size.type = required_argument
pbe-encode.arg.key-size.valuetype = java.lang.Integer
pbe-encode.arg.key-size.default = 256
pbe-encode.arg.key-size.metavar = NUMBER
pbe-encode.arg.key-size.help = Key size, default: @CLI_PRM_DEFAULT@
pbe-encode.arg.iterations.name = iterations
pbe-encode.arg.iterations.type = required_argument
pbe-encode.arg.iterations.valuetype = java.lang.Integer
pbe-encode.arg.iterations.default = 4000
pbe-encode.arg.iterations.metavar = NUMBER
pbe-encode.arg.iterations.help = Number of iterations, default: @CLI_PRM_DEFAULT@
